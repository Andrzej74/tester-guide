name: Cypress Tests

on: [push, pull_request]

jobs:
  cypress-run:
    runs-on: ubuntu-latest

    steps:
      # Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      # Install dependencies with --legacy-peer-deps flag
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # Uruchomienie skryptu generujÄ…cego dane testowe
      - name: Generate test data
        run: node generateTestData.js

      # Create .env file with secrets for Firebase configuration
      - name: Create .env file
        run: |
          echo "REACT_APP_FIREBASE_API_KEY=${{ secrets.REACT_APP_FIREBASE_API_KEY }}" >> .env
          echo "REACT_APP_FIREBASE_AUTH_DOMAIN=${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}" >> .env
          echo "REACT_APP_FIREBASE_PROJECT_ID=${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}" >> .env
          echo "REACT_APP_FIREBASE_STORAGE_BUCKET=${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}" >> .env
          echo "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}" >> .env
          echo "REACT_APP_FIREBASE_APP_ID=${{ secrets.REACT_APP_FIREBASE_APP_ID }}" >> .env

      # Build and start the app
      - name: Build and start the application
        run: |
          npm run build
          npm start &
        env:
          CI: true

      # Wait for the application to start
      - name: Wait for the application to start
        run: npx wait-on http://localhost:3000 --timeout 120000

      # Run Cypress tests
      - name: Run Cypress tests
        run: npm run cypress:run

      # Clean up test data
      - name: Clean up test data
        if: always()    # ensures this step runs even if tests fail
        run: node cleanTestData.js